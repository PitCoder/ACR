package practica3_chatmulticast;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.InetAddress;
import java.net.MulticastSocket;
import java.net.UnknownHostException;
import javax.swing.DefaultListModel;
import javax.swing.JEditorPane;
import javax.swing.JList;
import javax.swing.JScrollBar;

public class VentanaCliente extends javax.swing.JFrame {
  MulticastSocket   s;
  int               pto;
  InetAddress       grupo ;
  String            myUser;
  DefaultListModel  listModel = new DefaultListModel();

  public VentanaCliente(String myUser) {
    this.myUser = myUser;
            
    initComponents();
    
    jListUsuarios.setModel(listModel);
    jLabelUsuario.setText("Conectado como: " + myUser);
    
    conectar();      
    
    /* Se modifica el tipo de datos que mostrará el EditorPane */
    jEditorPaneAreaChat.setContentType("text/html");    
    jEditorPaneAreaChat.setText("<html><head></head><body></body></html>");
  }
  
  public void setMyUser(String myUser) {
    this.myUser = myUser;
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jTextFieldMensaje = new javax.swing.JTextField();
    jButtonEnviar = new javax.swing.JButton();
    jScrollPane2 = new javax.swing.JScrollPane();
    jEditorPaneAreaChat = new javax.swing.JEditorPane();
    jScrollPane1 = new javax.swing.JScrollPane();
    jListUsuarios = new javax.swing.JList<>();
    jLabel1 = new javax.swing.JLabel();
    jLabelUsuario = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jButtonEnviar.setText("Enviar");
    jButtonEnviar.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        jButtonEnviarMouseClicked(evt);
      }
    });

    jEditorPaneAreaChat.setContentType("text/html");
    jScrollPane2.setViewportView(jEditorPaneAreaChat);

    jListUsuarios.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    jScrollPane1.setViewportView(jListUsuarios);

    jLabel1.setText("Usuarios en el chat:");

    jLabelUsuario.setText("jLabel2");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
              .addComponent(jTextFieldMensaje))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
              .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addComponent(jButtonEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(jLabel1))
                .addGap(0, 40, Short.MAX_VALUE))))
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabelUsuario)
            .addGap(0, 0, Short.MAX_VALUE)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addComponent(jLabel1)
            .addGap(18, 18, 18)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(25, 25, 25)))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jTextFieldMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jButtonEnviar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jLabelUsuario))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void jButtonEnviarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonEnviarMouseClicked
    botonEnviar();
  }//GEN-LAST:event_jButtonEnviarMouseClicked

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(VentanaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(VentanaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(VentanaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(VentanaCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
       // new VentanaCliente().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButtonEnviar;
  private javax.swing.JEditorPane jEditorPaneAreaChat;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabelUsuario;
  private javax.swing.JList<String> jListUsuarios;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JTextField jTextFieldMensaje;
  // End of variables declaration//GEN-END:variables

  /* Métodos personalizados */
  public void conectar() {
    try {
      pto = 1234;
      String dir = "229.1.1.1";
      s = new MulticastSocket(5678);      
      grupo = null;
      
      try {
        grupo = InetAddress.getByName(dir);
      } catch (UnknownHostException u) {u.printStackTrace();}
      
      s.setReuseAddress(true);
      s.setTimeToLive(255);
      
      s.joinGroup(grupo);
      System.out.println("Me uní al grupo");
      
      /* Se envia mensaje de que ingresé */
      mensajeSaludo();
      
      /* Hilo para escuchar */
      RecibeMensaje_Worker rmw = new RecibeMensaje_Worker(this);
      rmw.escuchar();            
      
    } catch (Exception e) {e.printStackTrace();}
  }

  private void botonEnviar() {
    /* Primero se verifica si es un mensaje privado (tiene seleccionado algun usuario) */
    String usuarioDestino = verificaUsuarioSeleccionado();
    String mensaje;
    
    if (usuarioDestino == null) {  // Mensaje grupal
      mensaje = myUser + "@" + jTextFieldMensaje.getText();
    } else {  // Mensaje privado
      mensaje = "$PM" + myUser + ";" + usuarioDestino + "@" + jTextFieldMensaje.getText();       
      jListUsuarios.clearSelection();  // Para quitar el selected
    }
    
    byte[] b        = mensaje.getBytes();  // Conversión a bytes    
    DatagramPacket p = new DatagramPacket(b, b.length, grupo, pto);  // Creación del paquete
    
    try {
      s.send(p);
    } catch (IOException ex) {}
    
    jEditorPaneAreaChat.revalidate();
    getScrollBar().setValue(getScrollBar().getMaximum());    
  }  
  
  private void mensajeSaludo() {
    String mensaje  = "$newUserAdd@" + myUser;
    byte[] b        = mensaje.getBytes();
    
    DatagramPacket p = new DatagramPacket(b, b.length, grupo, pto);
    try {
      s.send(p);
    } catch (IOException ex) {      
    }
  }
  
  /* Métodos para la comunicación con el hilo */
  public JEditorPane getAreaChat() {
    return jEditorPaneAreaChat;
  }
  
  public JScrollBar getScrollBar() {
    return jScrollPane2.getVerticalScrollBar();    
  }

  public JList getListUsuarios() {
    return jListUsuarios;
  }
  
  public String getMyUser() {
    return myUser;
  }
  
  /* */
  private String verificaUsuarioSeleccionado() {
    int i = jListUsuarios.getSelectedIndex();
    String usuarioSeleccionado = null;
    
    if (i != -1) {
      usuarioSeleccionado = jListUsuarios.getSelectedValue();
    }
    
    return usuarioSeleccionado;
  }
}
